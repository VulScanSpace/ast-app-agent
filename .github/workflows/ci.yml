name: Ast App Build

on:
  push:
    branches:
      - "main"
    paths-ignore:
      #      - '.github/**'
      #      - '**.yml'
      - '**.xml'
      - '**.md'
      - 'LICENSE'
      - '.gitignore'

# The API requires write permission on the repository to submit dependencies
permissions:
  contents: write

# Environment variables to configure Go and Go modules. Customize as necessary
env:
  GOPROXY: '' # A Go Proxy server to be used
  GOPRIVATE: '' # A list of modules are considered private and not requested from GOPROXY

concurrency:
  group: dlc-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: echo "JAVA_8=$JAVA_HOME" >> $GITHUB_ENV
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: echo "JAVA_11=$JAVA_HOME" >> $GITHUB_ENV
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.2.5

  build-and-deploy-ast-app:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ast-Framework Repository
        uses: actions/checkout@v3
        with:
          repository: "VulScanSpace/AST-Framework"
          token: ${{ secrets.VulScanSpaceTokenForClonePrivateRepo }}

      - name: Build Ast Framework
        run: |
          mvn -B -DskipTests clean package
          cp libs/* /tmp/
          ls /tmp

      - name: Checkout ast-app-agent Repository
        uses: actions/checkout@v3

      - name: Build Ast App
        run: |
          make build
          cp build/ci/bin/ast-app-agent /tmp/ast-app-agent

      - name: Build Ast-Agent RPM
        run: |
          echo "current dir: $(pwd)"
          sudo apt-get install rpm
          mkdir -p {BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp /tmp/ast-app-agent SOURCES
          cp /tmp/*.jar SOURCES
          curl -sL -o "SOURCES/jattach-linux" "https://github.com/jattach/jattach/releases/download/$(curl -sL "https://api.github.com/repos/jattach/jattach/releases/latest" | grep -E 'tag_name\": \"' | head -n 1 | tr -d 'tag_name\": ' | tr -d ',')/jattach"
          cp build/ci/config/ast-app-agent.spec SPECS/
          ls SOURCES
          rpmbuild -ba SPECS/ast-app-agent.spec
